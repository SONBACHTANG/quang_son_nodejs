<div class="row" style="margin-top:50px;">
    <div class="col-md-5">
        <div class="d-flex align-items-center justify-content-center">
            <h2 class="text-primary">Danh Sách Thành Viên</h2>
        </div>
    </div> 

    <div class="col-md-3"></div>

    <div class="col-md-2">
        <div class="d-flex flex-row-reverse">
          <div class="p-2">
            <button type="button" class="btn btn-primary" data-mdb-toggle="modal" data-mdb-target="#exampleModal1">
              Thêm
              <i class="fas fa-plus"></i>
            </button>
          </div>
        </div>
    </div>
</div>

<div class="row mt-4 mb-2">
  <div class="col-1"></div>
  <div class="col-10">
    <table class="table border border-secondary table-striped table-hover" style="border-radius:20%">
      <thead>
        <tr>
          <th class="text-center" scope="col">STT</th>
          <th class="text-center" scope="col">First Name</th>
          <th class="text-center" scope="col">LastName</th>
          <th class="text-center" scope="col">Mobile</th>
          <th class="text-center" scope="col">UserName</th>
          <th class="text-center" scope="col">Password</th>
        </tr>
      </thead>
      <tbody id="table-body">
      </tbody>
    </table>
  </div>
</div>

<div class="row mb-2">
  <div class="col-4"></div>
  <div class="col-4" style="display: flex; justify-content: center; align-items: center;">
    <nav aria-label="...">
        <ul class="pagination">
          <li class="page-item">
            <a class="page-link" href="#">Previous</a>
          </li>
          <li class="page-item">
            <a class="page-link" href="#">Next</a>
          </li>
        </ul>
      </nav>
    </div>
  
  <div class="col-4"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', async function() {
    const perPage = 5; // số lượng bản ghi trên mỗi trang
    const tableBody = document.querySelector('#table-body');
    const paginationList = document.querySelector('.pagination');

    // Lấy toàn bộ danh sách sản phẩm
    const Users = await fetch("http://localhost:3000/users/getAll")
        .then(response => response.json())
        .then(response => response.content)
        .catch(error => []);

    // Hiển thị trang đầu tiên
    showPage(1);

    // Tạo các nút phân trang
    for (let i = 1; i <= Math.ceil(Users.length / perPage); i++) {
        const li = document.createElement('li');
        li.classList.add('page-item');
        if (i === 1) {
            li.classList.add('active');
        }
        const a = document.createElement('a');
        a.classList.add('page-link');
        a.href = '#';
        a.textContent = i;
        a.addEventListener('click', () => {
            showPage(i);
            const currentActive = paginationList.querySelector('.active');
            currentActive.classList.remove('active');
            li.classList.add('active');
        });
        li.appendChild(a);
        paginationList.insertBefore(li, paginationList.lastChild.previousSibling);
    }

    const nextButton = document.querySelector('.pagination .page-item:last-child .page-link');
    const prevButton = document.querySelector('.pagination .page-item:first-child .page-link');

    let currentPage = paginationList.querySelector('.active').textContent;

    nextButton.addEventListener('click', () => {
    if (currentPage < Math.ceil(Users.length / perPage)) {
        currentPage++;
        showPage(currentPage);
        updatePagination();
    }
    });

    prevButton.addEventListener('click', () => {
    if (currentPage > 1) {
        currentPage--;
        showPage(currentPage);
        updatePagination();
    }
    });

    function updatePagination() {
    const pageLinks = document.querySelectorAll('.pagination .page-link');
    pageLinks.forEach(link => {
        if (link.textContent == currentPage) {
        link.parentElement.classList.add('active');
        } else {
        link.parentElement.classList.remove('active');
        }
    });
    }

    // Hiển thị bản ghi ở trang pageNum
    function showPage(pageNum) {
        const start = (pageNum - 1) * perPage;
        const end = pageNum * perPage;
        tableBody.innerHTML = Users.slice(start, end).map((item, index) => `
            <tr id=${item._id}>
                <th class="text-center" scope="row">${start + index + 1}</th>
                <td class="text-center">${item.FirstName}</td>
                <td class="text-center">${item.LastName}</td>
                <td class="text-center">${item.Mobile}</td>
                <td class="text-center">${item.UserName}</td>
                <td class="text-center">${item.Password}</td>
            </tr>
        `).join('');
    }

});
</script>